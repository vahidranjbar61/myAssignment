{"ast":null,"code":"import{useState}from'react';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import'./App.css';import Navbar from'./components/navbar';import Home from'./components/home';import Login from'./components/login';// Placeholder for authentication state (replace with your logic)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const isLoggedIn=false;// Replace with actual authentication logic\nfunction App(){const[loggedIn,setLoggedIn]=useState(isLoggedIn);// Initial state\n// // Simulate authentication check on app load (replace with actual logic)\n// useEffect(() => {\n//   // Check for stored tokens, session data, or user info to determine login state\n//   // setLoggedIn(true or false based on authentication check);\n// }, []); // Empty dependency array to run only on initial render\nconst handleLogin=()=>{setLoggedIn(true);// Update state on successful login\n};return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:!loggedIn?/*#__PURE__*/_jsx(Login,{onLogin:handleLogin}):/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:loggedIn?/*#__PURE__*/_jsx(Home,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})})]})})]})});}export default App;","map":{"version":3,"names":["useState","BrowserRouter","Routes","Route","Navigate","Navbar","Home","Login","jsx","_jsx","jsxs","_jsxs","isLoggedIn","App","loggedIn","setLoggedIn","handleLogin","children","className","path","element","onLogin","to","replace"],"sources":["/var/www/project/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport Login from './components/login';\n\n// Placeholder for authentication state (replace with your logic)\nconst isLoggedIn = false; // Replace with actual authentication logic\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(isLoggedIn); // Initial state\n    // // Simulate authentication check on app load (replace with actual logic)\n    // useEffect(() => {\n    //   // Check for stored tokens, session data, or user info to determine login state\n    //   // setLoggedIn(true or false based on authentication check);\n    // }, []); // Empty dependency array to run only on initial render\n\n    const handleLogin = () => {\n      setLoggedIn(true); // Update state on successful login\n    };\n\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n        <Routes>\n            <Route\n              path=\"/login\"\n              element={!loggedIn ? <Login onLogin={handleLogin} /> : <Navigate to=\"/\" replace />}\n            />\n            <Route path=\"/\" element={loggedIn ? <Home /> : <Navigate to=\"/login\" replace />} />\n        </Routes>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACzE,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAEtC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,UAAU,CAAG,KAAK,CAAE;AAC1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAACY,UAAU,CAAC,CAAE;AACpD;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxBD,WAAW,CAAC,IAAI,CAAC,CAAE;AACrB,CAAC,CAEH,mBACEN,IAAA,CAACR,aAAa,EAAAgB,QAAA,cACVN,KAAA,QAAKO,SAAS,CAAC,KAAK,CAAAD,QAAA,eACpBR,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVI,IAAA,QAAKS,SAAS,CAAC,SAAS,CAAAD,QAAA,cACxBN,KAAA,CAACT,MAAM,EAAAe,QAAA,eACHR,IAAA,CAACN,KAAK,EACJgB,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAE,CAACN,QAAQ,cAAGL,IAAA,CAACF,KAAK,EAACc,OAAO,CAAEL,WAAY,CAAE,CAAC,cAAGP,IAAA,CAACL,QAAQ,EAACkB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAE,CACpF,CAAC,cACFd,IAAA,CAACN,KAAK,EAACgB,IAAI,CAAC,GAAG,CAACC,OAAO,CAAEN,QAAQ,cAAGL,IAAA,CAACH,IAAI,GAAE,CAAC,cAAGG,IAAA,CAACL,QAAQ,EAACkB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAE,CAAE,CAAC,EAC/E,CAAC,CACJ,CAAC,EACH,CAAC,CACO,CAAC,CAEpB,CAEA,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}