{"ast":null,"code":"var _jsxFileName = \"/Users/vahid.ranjbar/Projects/sideAssignment/frontend/src/components/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport bcrypt from 'bcryptjs';\nimport HttpService from \"../services/http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const httpService = new HttpService();\n    try {\n      // Generate salt for password hashing\n      const salt = await bcrypt.genSalt(10);\n\n      // Hash the password using bcrypt\n      const hashedPassword = await bcrypt.hash(password, 10);\n      console.log(hashedPassword);\n      const response = await httpService.post('/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password: hashedPassword\n        })\n      });\n      if (!response.status === 200) {\n        throw new Error('Login failed');\n      }\n\n      // Handle successful login (e.g., redirect to protected area)\n      console.log('Login successful!');\n      // You can use browser storage (localStorage or sessionStorage) \n      // to store a token or user information here\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value),\n        placeholder: \"Enter your email\",\n        className: \"form-control\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        placeholder: \"Enter your password\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"u9BVL+BD8IwtAdnamg8Av8OIKw0=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","bcrypt","HttpService","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","httpService","salt","genSalt","hashedPassword","hash","console","log","response","post","method","headers","body","JSON","stringify","status","Error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/vahid.ranjbar/Projects/sideAssignment/frontend/src/components/login.js"],"sourcesContent":["import { useState } from 'react';\nimport bcrypt from 'bcryptjs';\nimport HttpService from \"../services/http\";\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const httpService = new HttpService();\n\n    try {\n      // Generate salt for password hashing\n      const salt = await bcrypt.genSalt(10);\n\n      // Hash the password using bcrypt\n      const hashedPassword = await bcrypt.hash(password, 10);\n      console.log(hashedPassword);\n\n      const response = await httpService.post('/api/v1/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password: hashedPassword }),\n      });\n\n      if (!response.status === 200) {\n        throw new Error('Login failed');\n      }\n\n      // Handle successful login (e.g., redirect to protected area)\n      console.log('Login successful!');\n      // You can use browser storage (localStorage or sessionStorage) \n      // to store a token or user information here\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      {error && <p className=\"error\">{error}</p>}\n      <form className=\"login-form\" onSubmit={ handleSubmit }>\n        <input\n          type=\"email\"\n          id=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder='Enter your email'\n          className='form-control'\n          required\n        />\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n          placeholder='Enter your password'\n          className='form-control'\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}