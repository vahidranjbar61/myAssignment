{"ast":null,"code":"var _jsxFileName = \"/Users/vahid.ranjbar/Projects/sideAssignment/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport Login from './components/login';\n\n// Placeholder for authentication state (replace with your logic)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isLoggedIn = true; // Replace with actual authentication logic\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(isLoggedIn); // Initial state\n  // // Simulate authentication check on app load (replace with actual logic)\n  // useEffect(() => {\n  //   // Check for stored tokens, session data, or user info to determine login state\n  //   // setLoggedIn(true or false based on authentication check);\n  // }, []); // Empty dependency array to run only on initial render\n\n  const handleLogin = () => {\n    setLoggedIn(true); // Update state on successful login\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/6HaMoXWr79Lz5Q66v3oHNcd32k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Routes","Route","Navigate","Navbar","Home","Login","jsxDEV","_jsxDEV","isLoggedIn","App","_s","loggedIn","setLoggedIn","handleLogin","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","to","replace","_c","$RefreshReg$"],"sources":["/Users/vahid.ranjbar/Projects/sideAssignment/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport Login from './components/login';\n\n// Placeholder for authentication state (replace with your logic)\nconst isLoggedIn = true; // Replace with actual authentication logic\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(isLoggedIn); // Initial state\n    // // Simulate authentication check on app load (replace with actual logic)\n    // useEffect(() => {\n    //   // Check for stored tokens, session data, or user info to determine login state\n    //   // setLoggedIn(true or false based on authentication check);\n    // }, []); // Empty dependency array to run only on initial render\n\n    const handleLogin = () => {\n      setLoggedIn(true); // Update state on successful login\n    };\n\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n        <Routes>\n          \n            <Route\n              path=\"/login\"\n              element={!loggedIn ? <Login onLogin={handleLogin} /> : <Navigate to=\"/\" replace />}\n            />\n            <Route path=\"/\" element={loggedIn ? <Home /> : <Navigate to=\"/login\" replace />} />\n         \n        </Routes>\n        </div>\n\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,IAAI,CAAC,CAAC;AACzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACU,UAAU,CAAC,CAAC,CAAC;EACpD;EACA;EACA;EACA;EACA;;EAEA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC;EAEH,oBACEL,OAAA,CAACR,aAAa;IAAAe,QAAA,eACVP,OAAA;MAAKQ,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACpBP,OAAA,CAACJ,MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVZ,OAAA;QAAKQ,SAAS,EAAC,SAAS;QAAAD,QAAA,eACxBP,OAAA,CAACP,MAAM;UAAAc,QAAA,gBAEHP,OAAA,CAACN,KAAK;YACJmB,IAAI,EAAC,QAAQ;YACbC,OAAO,EAAE,CAACV,QAAQ,gBAAGJ,OAAA,CAACF,KAAK;cAACiB,OAAO,EAAET;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACL,QAAQ;cAACqB,EAAE,EAAC,GAAG;cAACC,OAAO;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC,eACFZ,OAAA,CAACN,KAAK;YAACmB,IAAI,EAAC,GAAG;YAACC,OAAO,EAAEV,QAAQ,gBAAGJ,OAAA,CAACH,IAAI;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACL,QAAQ;cAACqB,EAAE,EAAC,QAAQ;cAACC,OAAO;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE/E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAGpB;AAACT,EAAA,CAhCQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}