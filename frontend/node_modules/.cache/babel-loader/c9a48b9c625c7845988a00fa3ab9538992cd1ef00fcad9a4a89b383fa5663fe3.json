{"ast":null,"code":"const headers={'Accept':'application/json','Content-type':'application/json'};export default class HttpService{constructor(){this.baseUrl='http://localhost:7070/api/v1';}request(url){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;url=\"\".concat(this.baseUrl,\"/\").concat(url);const options={headers,method};if(data){options.body=JSON.stringify({...data});}return fetch(url,options);}async get(url){let id=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(id){url=\"\".concat(url,\"/\").concat(id);}const res=await this.request(url);return await res.json();}async put(url,data){const res=await this.request(url,'PUT',data);return await res.json();}async post(url,data){const res=await this.request(url,'POST',data);return await res.json();}}","map":{"version":3,"names":["headers","HttpService","constructor","baseUrl","request","url","method","arguments","length","undefined","data","concat","options","body","JSON","stringify","fetch","get","id","res","json","put","post"],"sources":["/var/www/project/src/services/http.js"],"sourcesContent":["\nconst headers = {\n    'Accept': 'application/json',\n    'Content-type': 'application/json',\n};\n\nexport default class HttpService {\n    constructor () {\n        this.baseUrl = 'http://localhost:7070/api/v1';\n    }\n\n    request(url, method='GET', data=null) {\n        url = `${this.baseUrl}/${url}`;\n        const options = {\n            headers,\n            method,\n        };\n        if (data) {\n            options.body = JSON.stringify({ ...data });\n        }\n\n        return fetch(url, options);\n    }\n\n    async get(url, id=null) {\n        if(id) {\n            url = `${url}/${id}`\n        }\n\n        const res = await this.request(url);\n        return await res.json();\n    }\n\n    async put(url, data) {\n        const res = await this.request(url, 'PUT', data);\n        return await res.json();\n    }\n\n    async post(url, data) {\n        const res = await this.request(url, 'POST', data);\n        return await res.json();\n    }\n}"],"mappings":"AACA,KAAM,CAAAA,OAAO,CAAG,CACZ,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CAAC,CAED,cAAe,MAAM,CAAAC,WAAY,CAC7BC,WAAWA,CAAA,CAAI,CACX,IAAI,CAACC,OAAO,CAAG,8BAA8B,CACjD,CAEAC,OAAOA,CAACC,GAAG,CAA2B,IAAzB,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAC,KAAK,IAAE,CAAAG,IAAI,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAC,IAAI,CAChCF,GAAG,IAAAM,MAAA,CAAM,IAAI,CAACR,OAAO,MAAAQ,MAAA,CAAIN,GAAG,CAAE,CAC9B,KAAM,CAAAO,OAAO,CAAG,CACZZ,OAAO,CACPM,MACJ,CAAC,CACD,GAAII,IAAI,CAAE,CACNE,OAAO,CAACC,IAAI,CAAGC,IAAI,CAACC,SAAS,CAAC,CAAE,GAAGL,IAAK,CAAC,CAAC,CAC9C,CAEA,MAAO,CAAAM,KAAK,CAACX,GAAG,CAAEO,OAAO,CAAC,CAC9B,CAEA,KAAM,CAAAK,GAAGA,CAACZ,GAAG,CAAW,IAAT,CAAAa,EAAE,CAAAX,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAC,IAAI,CAClB,GAAGW,EAAE,CAAE,CACHb,GAAG,IAAAM,MAAA,CAAMN,GAAG,MAAAM,MAAA,CAAIO,EAAE,CAAE,CACxB,CAEA,KAAM,CAAAC,GAAG,CAAG,KAAM,KAAI,CAACf,OAAO,CAACC,GAAG,CAAC,CACnC,MAAO,MAAM,CAAAc,GAAG,CAACC,IAAI,CAAC,CAAC,CAC3B,CAEA,KAAM,CAAAC,GAAGA,CAAChB,GAAG,CAAEK,IAAI,CAAE,CACjB,KAAM,CAAAS,GAAG,CAAG,KAAM,KAAI,CAACf,OAAO,CAACC,GAAG,CAAE,KAAK,CAAEK,IAAI,CAAC,CAChD,MAAO,MAAM,CAAAS,GAAG,CAACC,IAAI,CAAC,CAAC,CAC3B,CAEA,KAAM,CAAAE,IAAIA,CAACjB,GAAG,CAAEK,IAAI,CAAE,CAClB,KAAM,CAAAS,GAAG,CAAG,KAAM,KAAI,CAACf,OAAO,CAACC,GAAG,CAAE,MAAM,CAAEK,IAAI,CAAC,CACjD,MAAO,MAAM,CAAAS,GAAG,CAACC,IAAI,CAAC,CAAC,CAC3B,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}