{"ast":null,"code":"var _jsxFileName = \"/var/www/project/src/components/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport HttpService from \"../services/http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const httpService = new HttpService();\n    try {\n      const response = await httpService.post('login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: {\n          username,\n          password\n        }\n      });\n      if (!response.status) {\n        throw new Error('Login failed');\n      }\n\n      // Handle successful login (e.g., redirect to protected area)\n      console.log('Login successful!');\n      // You can use browser storage (localStorage or sessionStorage) \n      // to store a token or user information here\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value),\n        placeholder: \"Enter your email\",\n        className: \"form-control\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        placeholder: \"Enter your password\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"u9BVL+BD8IwtAdnamg8Av8OIKw0=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","HttpService","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","httpService","response","post","method","headers","body","status","Error","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","name","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/var/www/project/src/components/login.js"],"sourcesContent":["import { useState } from 'react';\nimport HttpService from \"../services/http\";\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const httpService = new HttpService();\n\n    try {\n      const response = await httpService.post('login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: { username, password },\n      });\n\n      if (!response.status) {\n        throw new Error('Login failed');\n      }\n\n      // Handle successful login (e.g., redirect to protected area)\n      console.log('Login successful!');\n      // You can use browser storage (localStorage or sessionStorage) \n      // to store a token or user information here\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      {error && <p className=\"error\">{error}</p>}\n      <form className=\"login-form\" onSubmit={ handleSubmit }>\n        <input\n          type=\"email\"\n          name=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder='Enter your email'\n          className='form-control'\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n          placeholder='Enter your password'\n          className='form-control'\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}