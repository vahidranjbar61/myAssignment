{"ast":null,"code":"import{useState}from'react';import HttpService from\"../services/http\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const handleSubmit=async event=>{event.preventDefault();const httpService=new HttpService();try{const response=await httpService.post('login',{method:'POST',headers:{'Content-Type':'application/json'},body:{username,password}});if(!response.status===200){throw new Error('Login failed');}// Handle successful login (e.g., redirect to protected area)\nconsole.log('Login successful!');// You can use browser storage (localStorage or sessionStorage) \n// to store a token or user information here\n}catch(error){setError(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"username\",value:username,onChange:event=>setUsername(event.target.value),placeholder:\"Enter your email\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:password,onChange:event=>setPassword(event.target.value),placeholder:\"Enter your password\",className:\"form-control\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]});};export default LoginPage;","map":{"version":3,"names":["useState","HttpService","jsx","_jsx","jsxs","_jsxs","LoginPage","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","httpService","response","post","method","headers","body","status","Error","console","log","message","children","className","onSubmit","type","name","value","onChange","target","placeholder","required"],"sources":["/var/www/project/src/components/login.js"],"sourcesContent":["import { useState } from 'react';\nimport HttpService from \"../services/http\";\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const httpService = new HttpService();\n\n    try {\n      const response = await httpService.post('login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: { username, password },\n      });\n\n      if (!response.status === 200) {\n        throw new Error('Login failed');\n      }\n\n      // Handle successful login (e.g., redirect to protected area)\n      console.log('Login successful!');\n      // You can use browser storage (localStorage or sessionStorage) \n      // to store a token or user information here\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      {error && <p className=\"error\">{error}</p>}\n      <form className=\"login-form\" onSubmit={ handleSubmit }>\n        <input\n          type=\"email\"\n          name=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder='Enter your email'\n          className='form-control'\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n          placeholder='Enter your password'\n          className='form-control'\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,WAAW,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAa,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAf,WAAW,CAAC,CAAC,CAErC,GAAI,CACF,KAAM,CAAAgB,QAAQ,CAAG,KAAM,CAAAD,WAAW,CAACE,IAAI,CAAC,OAAO,CAAE,CAC/CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAE,CAAEd,QAAQ,CAAEE,QAAS,CAC7B,CAAC,CAAC,CAEF,GAAI,CAACQ,QAAQ,CAACK,MAAM,GAAK,GAAG,CAAE,CAC5B,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAc,CAAC,CACjC,CAEA;AACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChC;AACA;AACF,CAAE,MAAOd,KAAK,CAAE,CACdC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC,CACzB,CACF,CAAC,CAED,mBACErB,KAAA,QAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAI,OAAK,CAAI,CAAC,CACbhB,KAAK,eAAIR,IAAA,MAAGyB,SAAS,CAAC,OAAO,CAAAD,QAAA,CAAEhB,KAAK,CAAI,CAAC,cAC1CN,KAAA,SAAMuB,SAAS,CAAC,YAAY,CAACC,QAAQ,CAAGhB,YAAc,CAAAc,QAAA,eACpDxB,IAAA,UACE2B,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEzB,QAAS,CAChB0B,QAAQ,CAAGnB,KAAK,EAAKN,WAAW,CAACM,KAAK,CAACoB,MAAM,CAACF,KAAK,CAAE,CACrDG,WAAW,CAAC,kBAAkB,CAC9BP,SAAS,CAAC,cAAc,CACxBQ,QAAQ,MACT,CAAC,cACFjC,IAAA,UACE2B,IAAI,CAAC,UAAU,CACfC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEvB,QAAS,CAChBwB,QAAQ,CAAGnB,KAAK,EAAKJ,WAAW,CAACI,KAAK,CAACoB,MAAM,CAACF,KAAK,CAAE,CACrDG,WAAW,CAAC,qBAAqB,CACjCP,SAAS,CAAC,cAAc,CACzB,CAAC,cACFzB,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}